{"version":3,"sources":["Forms/RegistrationForm.js","Components/Register.js","Components/Login.js","Components/OTP.js","Components/Home.js","Components/About-us.js","Components/Contact-us.js","Components/Images/ASKQ.png","Components/Askques.js","Components/front.js","Components/App.js","index.js"],"names":["schema","yup","shape","firstName","min","max","matches","required","lastName","enrollment","email","password","confirmPassword","oneOf","mobile","institute","year","positive","integer","Form","props","history","useHistory","useState","passwordShown","setPasswordShown","confirmPasswordShown","setConfirmPasswordShown","idCardErrorMessage","setIdCardErrorMessage","checkFileFormat","fileList","file","type","submitForm","data","a","console","log","idCard","convertBase64","base64File","fetch","method","body","JSON","stringify","headers","then","response","json","setTempUserId","push","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","error","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","onSubmit","className","name","placeholder","message","onClick","to","Register","Login","errorMessage","setErrorMessage","setUserId","sessionStorage","setItem","OTP","state","setState","stateValue","setStateValue","otpError","setOtpError","handleChange","event","newStateValue","target","value","getOTP","whereToOTP","tempUserId","autoFocus","maxLength","size","pattern","Home","clear","href","About","Contact","id","rows","Aques","src","poster","alt","Front","App","getItem","userId","exact","path","component","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.24b5da03.chunk.js","sourcesContent":["import React,{ useState } from 'react';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport * as yup from 'yup';\r\n\r\nconst schema = yup.object().shape({\r\n    firstName: yup.string().min(2).max(50).matches(/^[A-Za-z]+((('|-|\\.)?([A-Za-z])+))?$/, \"Please Enter a Valid First Name\").required(\"This Field is Required\"),\r\n    lastName: yup.string().min(2).max(50).matches(/^[A-Za-z]+((('|-|\\.)?([A-Za-z])+))?$/, \"Please Enter a Valid Last Name\").required(\"This Field is Required\"),\r\n    enrollment: yup.string().min(12).max(20).required(\"This Field is Required\"),\r\n    email: yup.string().email(\"Please Enter a Valid Email\").required(\"This Field is Required\"),\r\n    password: yup.string().min(8).matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/).required(\"This Field is Required\"),\r\n    confirmPassword: yup.string().oneOf([yup.ref(\"password\"), null]),\r\n    mobile: yup.string().matches(/^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)$/, \"Please Enter a Valid Mobile Number\").required(\"This Field is Required\"),\r\n    institute: yup.string().max(100).matches(/^[a-zA-Z]+$/, \"Please Enter a Valid Institute\").required(\"This Field is Required\"),\r\n    year: yup.number().positive().integer().min(1).max(5).required(\"This Field is Required\"),\r\n})\r\n\r\nfunction Form(props) {\r\n\r\n    const history = useHistory();\r\n\r\n    const [passwordShown, setPasswordShown] = useState(false);\r\n    const togglePasswordVisiblity = () => {\r\n        setPasswordShown(passwordShown ? false : true);\r\n    };\r\n\r\n    const [confirmPasswordShown, setConfirmPasswordShown] = useState(false);\r\n    const toggleConfirmPasswordVisiblity = () => {\r\n        setConfirmPasswordShown(confirmPasswordShown ? false : true);\r\n    };\r\n\r\n    const [idCardErrorMessage, setIdCardErrorMessage] = useState(false);\r\n\r\n    const checkFileFormat = function(fileList) {\r\n        let file = fileList[0];\r\n        if(file) {\r\n            if(file.type === \"image/jpeg\" || file.type === \"image/jpg\" || file.type === \"image/png\" || file.type === \"application/pdf\") {\r\n                setIdCardErrorMessage(' ')\r\n                return true;\r\n            } else {\r\n                setIdCardErrorMessage('Please Select Valid File Type Only!')\r\n                return false;\r\n            }\r\n        } else {\r\n            setIdCardErrorMessage('Please Select a File')\r\n            return false;\r\n        }\r\n        \r\n    }\r\n\r\n    const submitForm = async (data) => {\r\n        console.log(data);\r\n\r\n        if(checkFileFormat(data.idCard)) {\r\n            let file = data.idCard[0];\r\n            const base64File = await convertBase64(file);\r\n\r\n            data.idCard = base64File;\r\n\r\n            fetch(\"http://127.0.0.1:8000/authentication/registerUser\", {\r\n      \r\n                // Adding method type\r\n                method: \"POST\",\r\n                \r\n                // Adding body or contents to send\r\n                body: JSON.stringify(data),\r\n                \r\n                // Adding headers to the request\r\n                headers: {\r\n                    \"Content-type\": \"application/json; charset=UTF-8\"\r\n                }\r\n            })\r\n      \r\n            // Converting to JSON\r\n            .then(response => response.json())\r\n            \r\n            // Displaying results to console\r\n            .then(json => console.log(json));\r\n\r\n            props.setTempUserId(data['enrollment']);\r\n            history.push('/OTP');\r\n        }\r\n        \r\n    }\r\n\r\n    const convertBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file);\r\n\r\n            fileReader.onload = () => {\r\n                resolve(fileReader.result);\r\n            };\r\n\r\n            fileReader.onerror = (error) => {\r\n                reject(error);\r\n            };\r\n        });\r\n    };\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm({\r\n        resolver: yupResolver(schema),\r\n    });\r\n\r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit(submitForm)}>\r\n            <h3>Register Here!!</h3>\r\n\r\n            <div className=\"form-group\">\r\n                <label>First Name</label>\r\n                <input type=\"text\" name=\"firstName\" {...register('firstName')} className=\"form-control input-style\" placeholder=\"First Name...\"/>\r\n                <span>{ errors.firstName?.message }</span>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Last Name</label>\r\n                <input type=\"text\" name=\"lastName\" {...register('lastName')} className=\"form-control input-style\" placeholder=\"last Name...\"/>\r\n                <span>{ errors.lastName?.message }</span>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Enrollment Number</label>\r\n                <input type=\"text\" name=\"enrollment\" {...register('enrollment')} className=\"form-control input-style\" placeholder=\"Enrollment Number...\"/>\r\n                <span>{ errors.enrollment?.message }</span>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Email</label>\r\n                <input type=\"text\" name=\"email\" {...register('email')} className=\"form-control input-style\" placeholder=\"Email...\"/>\r\n                <span>{ errors.email?.message }</span>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Password</label>\r\n                <input type={passwordShown ? \"text\" : \"password\"} name=\"password\" {...register('password')} className=\"form-control input-style\" placeholder=\"Password...\"/>\r\n                <span className=\"show-password\" onClick={togglePasswordVisiblity}>Show Password</span>\r\n                <span>{ errors.password?.message }</span>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Confirm Password</label>\r\n                <input type={confirmPasswordShown ? \"text\" : \"password\"} name=\"confirmPassword\" {...register('confirmPassword')} className=\"form-control input-style\" placeholder=\"Confirm Password...\"/>\r\n                <span className=\"show-password\" onClick={toggleConfirmPasswordVisiblity}>Show Password</span>\r\n                <span>{ errors.confirmPassword && \"Passwords Should Match\" }</span>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Mobile number</label>\r\n                <input type=\"text\" name=\"mobile\" {...register('mobile')} className=\"form-control input-style\" placeholder=\"Mobile Number...\" />\r\n                <span>{ errors.mobile?.message }</span>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Institute Name</label>\r\n                <input type=\"text\" name=\"institute\" {...register('institute')} className=\"form-control input-style\" placeholder=\"Institute...\"/>\r\n                <span>{ errors.institute?.message }</span>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Year</label>\r\n                <input type=\"text\" name=\"year\" {...register('year')} className=\"form-control input-style\" placeholder=\"Year...\"/>\r\n                <span>{ errors.year?.message }</span>\r\n            </div>\r\n\r\n            <div className=\"id-div\">\r\n                <label className=\"id-label\">Id Card photo</label>\r\n                <input type=\"file\" name=\"idCard\" {...register('idCard')}/>\r\n                <span>{ idCardErrorMessage }</span>\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"btn btn-dark btn-lg btn-block\">Register</button>\r\n\r\n\r\n            <p className=\"text-right\">\r\n                Already registered? \r\n                <Link to='/Login'>Login</Link>\r\n            </p>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport Form from '../Forms/RegistrationForm';\r\nimport '../css/registration.css';\r\n\r\nfunction Register(props) {\r\n    return(\r\n    <div className=\"container\">\r\n        <div className=\"card\">\r\n            <Form setTempUserId={props.setTempUserId} />\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\nexport default Register;\r\n","import React,{ useState } from 'react';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport * as yup from 'yup';\r\n\r\nconst schema = yup.object().shape({\r\n    enrollment: yup.string().required(\"This Field is Required\"),\r\n    password: yup.string().required(\"This Field is Required\"),\r\n})\r\n\r\nfunction Login(props) {\r\n       \r\n    let history = useHistory();\r\n    const [passwordShown, setPasswordShown] = useState(false);\r\n    const [errorMessage, setErrorMessage]  = useState('');\r\n    const { register, handleSubmit, formState: { errors } } = useForm({\r\n        resolver: yupResolver(schema),\r\n    });\r\n\r\n    const togglePasswordVisiblity = () => {\r\n        setPasswordShown(passwordShown ? false : true);\r\n    };\r\n    \r\n    const submitForm = (data) => {\r\n        console.log(data);\r\n        fetch(\"http://127.0.0.1:8000/authentication/loginUser\", {\r\n      \r\n            // Adding method type\r\n            method: \"POST\",\r\n            \r\n            // Adding body or contents to send\r\n            body: JSON.stringify(data),\r\n            \r\n            // Adding headers to the request\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\"\r\n            }\r\n        })\r\n  \r\n        // Converting to JSON\r\n        .then(response => response.json())\r\n        \r\n        // Displaying results to console\r\n        .then(json => {\r\n            console.log(json);\r\n            if(json['response'] === 'valid') {\r\n                props.setUserId(data['enrollment']);\r\n                sessionStorage.setItem('userId', JSON.stringify(data['enrollment']));\r\n                history.push(\"/Home\");\r\n            } else {\r\n                setErrorMessage(\"Invalid Credentials\")\r\n            }\r\n        });\r\n        \r\n    }\r\n\r\n    return(\r\n    \r\n    <div className=\"container\">\r\n        <div className=\"card\">\r\n            <form onSubmit={handleSubmit(submitForm)}>\r\n                <h3>Login</h3>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Enrollment Number</label>\r\n                    <input type=\"text\" className=\"form-control input-style\" name=\"enrollment\" {...register('enrollment')} placeholder=\"Enter Enrollment Number\" />\r\n                    <span>{ errors.enrollment?.message }</span>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input type={passwordShown ? \"text\" : \"password\"} name=\"password\" {...register('password')} className=\"form-control input-style\" placeholder=\"Password...\"/>\r\n                    <span className=\"show-password\" onClick={togglePasswordVisiblity}>Show Password</span>\r\n                    <span>{ errors.password?.message }</span>\r\n                </div>\r\n                <span>{ errorMessage }</span>\r\n\r\n                {/* <Link className=\"btn btn-dark btn-lg btn-block\" to=\"/Home\">Login</Link> */}\r\n                <button type=\"submit\" className=\"btn btn-dark btn-lg btn-block\">Login</button>\r\n                \r\n                <p className=\"text-right\">\r\n                    <Link to=\"/Signin\">Create Account</Link>\r\n                    {/* <a href=\"\">Create Account?</a> */}\r\n                </p>\r\n                </form>\r\n        </div>\r\n    </div>\r\n\r\n     );\r\n }\r\n\r\n export default Login;","import React, { useState } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nfunction OTP(props) {\r\n\r\n  const [state, setState] = useState(true);\r\n  const [stateValue, setStateValue] = useState(\"\");\r\n  const { register, handleSubmit } = useForm();\r\n  const history = useHistory();\r\n  const [otpError, setOtpError] = useState('');\r\n  \r\n  function handleChange(event) {\r\n    const newStateValue = event.target.value;\r\n    getOTP(newStateValue);\r\n    const newState = false;\r\n    setState(newState);\r\n    setStateValue(newStateValue);\r\n  }\r\n\r\n  const getOTP = function(whereToOTP) {\r\n    console.log(whereToOTP)\r\n    fetch(`http://127.0.0.1:8000/authentication/OTP?otpDes=${whereToOTP}`)\r\n  \r\n        // Converting to JSON\r\n        .then(response => response.json())\r\n        \r\n        // Displaying results to console\r\n        .then(json => console.log(json));\r\n\r\n  }\r\n\r\n  const onSubmitOTP = function(data) {\r\n    fetch(\"http://127.0.0.1:8000/authentication/OTP\", {\r\n      \r\n            // Adding method type\r\n            method: \"POST\",\r\n            \r\n            // Adding body or contents to send\r\n            body: JSON.stringify(data),\r\n            \r\n            // Adding headers to the request\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\"\r\n            }\r\n        })\r\n  \r\n        // Converting to JSON\r\n        .then(response => response.json())\r\n        \r\n        // Displaying results to console\r\n        .then(json => {\r\n          console.log(json)\r\n          if(json['result'] === 'valid') {\r\n            props.setUserId(props.tempUserId);\r\n            sessionStorage.setItem('userId', JSON.stringify(props.tempUserId));\r\n            history.push('/Home');\r\n          }else {\r\n            console.log('invalid');\r\n            setOtpError('Invalid OTP');\r\n          }\r\n        });\r\n\r\n  }\r\n\r\n    return(\r\n      <div>\r\n        {state\r\n          ?\r\n          <div className=\"OTP-div\">\r\n            <h2>Account Verification!</h2>\r\n            <h4>Get OTP on </h4>\r\n            <button type=\"button\" className=\"btn btn-primary otp-option\" onClick={handleChange} value=\"Mobile phone\">Mobile</button>\r\n            <button type=\"button\" className=\"btn btn-primary otp-option\" onClick={handleChange} value=\"Email\">Email</button>\r\n\r\n          </div> \r\n          :\r\n          <div className=\"OTP-div\">\r\n\r\n            <h2>Account Verification!</h2>\r\n            <h4> Enter the OTP we just send on your {stateValue}. </h4>\r\n            \r\n            <form onSubmit={handleSubmit(onSubmitOTP)}>\r\n              <input type=\"text\" name=\"otpValue\" {...register('otpValue')} className=\"smsCode\" autoFocus=\"\" maxLength=\"4\" size=\"1\" min=\"0\" max=\"9\" pattern=\"[0-9]{4}\"/><br/>\r\n              <span>{ otpError }</span>\r\n\r\n              {/* <Link to=\"/Home\" className=\"btn btn-primary btn-lg otp-button\">Verify</Link> */}\r\n              <button type=\"submit\" className=\"btn btn-primary otp-button\">Verify</button>\r\n            </form>\r\n          </div>} \r\n      </div>       \r\n    );\r\n}\r\nexport default OTP;","import React from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n// import poster from \"./Images/logo.png\";\r\nfunction Home(props) {\r\n\r\n  let history = useHistory();\r\n\r\n  const userLogout = () => {\r\n    props.setUserId('');\r\n    sessionStorage.clear();\r\n    history.push('/');\r\n  }\r\n\r\n    return(\r\n<div className=\"\">\r\n\r\n  <div className=\"sec-1\" >\r\n    <div className=\"row\">\r\n      <div className=\"col-lg-4\">\r\n      {/* <img className=\"logo-img\" src={poster} alt=\"not found\"/> */}\r\n        <h1 className=\"title\">College Forum</h1>\r\n          \r\n      </div>\r\n\r\n      <div className=\"col-lg-8\">\r\n        <div className=\"topnav\">\r\n          <div className=\"topnav-right\" >\r\n            <Link to=\"/AskQuestion\">Ask A Question</Link>\r\n            <Link to=\"/ContactUs\">Contact Us</Link>\r\n            <Link to=\"/AboutUs\">About Us</Link>\r\n            <Link to=\"#something\">Profile</Link>\r\n            <button onClick={userLogout}>Logout</button>\r\n            {/* <Link to=\"/Login\">Logout</Link> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div className=\"sec-2\">\r\n    <div className=\"row\">\r\n      <div className=\"col-sm-2 sec-2-col text-center\">\r\n        <a href=\"#general\" >General</a>\r\n      </div>\r\n\r\n      <div className=\"col-sm-2 sec-2-col text-center\">\r\n        <a href=\"#computer science\">Computer Science</a>\r\n      </div>\r\n\r\n      <div className=\"col-sm-2 sec-2-col text-center\">\r\n        <a href=\"#information technology\">Information Technology</a>\r\n      </div>\r\n\r\n      <div className=\"col-sm-2 sec-2-col text-center\">\r\n        <a href=\"#mechanical\">Mechanical</a>\r\n      </div>\r\n\r\n      <div className=\"col-sm-2 sec-2-col text-center\">\r\n        <a href=\"#civil\">Civil</a>\r\n      </div>\r\n\r\n      <div className=\"col-sm-2 sec-2-col text-center\">\r\n        <a href=\"#electronics\">Electronics</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div className=\"sec-3\">\r\n    <div className=\"sec-3-div\">\r\n      <h6>How i can fill academic fees through erp?</h6>\r\n      <p>Go to google and search for svv erp then login to it after that go to academics you will find an option for fees deposit.</p>\r\n    </div>\r\n\r\n    <div className=\"sec-3-div\">\r\n      <h6>How i can fill academic fees through erp?</h6>\r\n      <p>Go to google and search for svv erp then login to it after that go to academics you will find an option for fees deposit.</p>\r\n    </div>\r\n\r\n    <div className=\"sec-3-div\">\r\n      <h6>How i can fill academic fees through erp?</h6>\r\n      <p>Go to google and search for svv erp then login to it after that go to academics you will find an option for fees deposit.</p>\r\n    </div>\r\n\r\n    <div className=\"sec-3-div\">\r\n      <h6>How i can fill academic fees through erp?</h6>\r\n      <p>Go to google and search for svv erp then login to it after that go to academics you will find an option for fees deposit.</p>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n\r\n    );\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nfunction About() {\r\n    return(\r\n        <div className=\"about-card\">\r\n<div className=\"about-sec-1\">\r\n  <h1>About Us</h1>\r\n  <p>We are students</p>\r\n  <p>Resize the browser window to see that this page is responsive by the way.</p>\r\n</div>\r\n<div className=\"about-sec-2\">\r\n  <h1>Our Team</h1>\r\n  <p>Some text about who we are and what we do.</p>\r\n  <p>Resize the browser window to see that this page is responsive by the way.</p>\r\n  <p>Some text about who we are and what we do.</p>\r\n  <p>Resize the browser window to see that this page is responsive by the way.</p>\r\n  <p>Some text about who we are and what we do.</p>\r\n  <p>Resize the browser window to see that this page is responsive by the way.</p>\r\n</div>\r\n\r\n\r\n</div>\r\n    );\r\n}\r\nexport default About;","import React from 'react';\r\nfunction Contact() {\r\n    return(\r\n        <div>\r\n        <div className=\"card\">\r\n\r\n \r\n    <h3>Contact-us</h3>\r\n\r\n    <form>\r\n        \r\n        <div className=\"form-group\">\r\n            <label>Your name</label> \r\n                <input type=\"text\" name=\"Name\" className=\"form-control input-style\" required/>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n            <label>Your email address</label>\r\n                <input type=\"email\" id=\"Email\" name=\"Email\" className=\"form-control input-style\" required/>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n            <label>Your message</label>\r\n                <textarea  className=\"form-control input-style\" rows=\"6\" maxLength=\"3000\" required></textarea>\r\n        </div>\r\n\r\n        \r\n            <button type=\"submit\" id=\"fcf-button\" className=\"btn btn-primary btn-lg btn-block\">Send Message</button>\r\n\r\n    </form>\r\n    </div>\r\n\r\n</div>\r\n\r\n    );\r\n\r\n}\r\nexport default Contact;\r\n","export default __webpack_public_path__ + \"static/media/ASKQ.52d0110d.png\";","import React from \"react\";\r\nimport poster from \"./Images/ASKQ.png\";\r\nfunction Aques() {\r\n    return(\r\n        <div className=\"askcard\">\r\n       \r\n        <img className=\"img-ask\" src={poster} alt=\"kubkb\"/>\r\n        <div className=\"form-group\">\r\n        <label>Write your Question below</label>\r\n        <textarea  className=\"form-control input-style\" rows=\"2\" maxLength=\"1000\" required></textarea>\r\n    </div>\r\n        \r\n        <div className=\"row\">\r\n        <div className=\"col-lg-6\">\r\n        <div className=\"dropdown\">\r\n        <button type=\"button\" className=\"btn btn-primary btn-lg ask-btn-1\">Select your institute</button>\r\n  <div className=\"dropdown-content\">\r\n    <a href=\"#knkjn\">SVIIT</a>\r\n    <a href=\"#iun\">SVIM</a>\r\n    <a href=\"#unn\">SVIL</a>\r\n  </div>\r\n        </div>\r\n        </div>\r\n       <div className=\"col-lg-6\">  <button type=\"button\" className=\"btn btn-primary btn-lg ask-btn-2\">Ask Question</button></div>\r\n\r\n</div>\r\n        \r\n\r\n\r\n</div>\r\n    );\r\n}\r\nexport default Aques;","import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Front() {\r\n    return(\r\n        <div className=\"about-card bg-primary\">\r\n            <h1>somethoiddnfvlknfslnl</h1>\r\n            <div className=\"about-sec-1\">\r\n            <Link to=\"/Login\">inlnaslnviodciaeiscom</Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Front;","import React,{ useState } from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport Register from './Register';\r\nimport Login from './Login';\r\nimport OTP from './OTP';\r\nimport Home from './Home';\r\nimport About from \"./About-us\";\r\nimport Contact from \"./Contact-us\";\r\nimport Aques from \"./Askques\";\r\nimport Front from \"./front\";\r\n\r\n// import Update from './Update';\r\n// import Questions from './Questions';\r\nfunction App() {\r\n\r\n    const setUserSession = () => {\r\n        if(sessionStorage.getItem('userId')) {\r\n            return sessionStorage.getItem('userId');\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    const[userId, setUserId] = useState(setUserSession);\r\n    const[tempUserId, setTempUserId] = useState('');\r\n  \r\nreturn( \r\n    <div>\r\n        { userId \r\n            ?\r\n            <div>\r\n                <Route exact path=\"/\" component= {Front}/>        \r\n                <Route  path=\"/AboutUs\" component= {About}/> \r\n                <Route  path=\"/ContactUS\" component= {Contact}/> \r\n                <Route  path=\"/AskQuestion\" component= {Aques}/> \r\n\r\n                <Route  path=\"/Login\" render={() => (\r\n                    <Login setUserId={setUserId}/>\r\n                )}/>\r\n\r\n                <Route  path=\"/Home\" render={() => (\r\n                    <Home setUserId={setUserId}/>\r\n                )}/>\r\n\r\n                <Route  path=\"/Signin\" render={() => (\r\n                    <Register setTempUserId={setTempUserId}/>\r\n                )}/>  \r\n\r\n                <Route  path=\"/OTP\" render={() => (\r\n                    <OTP tempUserId={tempUserId}/>\r\n                )}/>  \r\n                          \r\n            </div>\r\n            :\r\n            <div>\r\n                <Route exact path=\"/\" component= {Front}/> \r\n                \r\n                <Route  path=\"/Login\" render={() => (\r\n                    <Login setUserId={setUserId}/>\r\n                )}/>\r\n\r\n                <Route  path=\"/Signin\" render={() => (\r\n                    <Register setTempUserId={setTempUserId}/>\r\n                )}/>  \r\n\r\n                <Route  path=\"/OTP\" render={() => (\r\n                    <OTP tempUserId={tempUserId} setUserId={setUserId}/>\r\n                )}/>\r\n            </div>    \r\n            }\r\n    </div>\r\n);\r\n\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./Components/App\";\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter><App/></BrowserRouter>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}